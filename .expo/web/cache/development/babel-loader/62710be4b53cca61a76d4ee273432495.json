{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aqrab\\\\OneDrive\\\\Desktop\\\\thesis project phase 2\\\\front-end-react-native-mobilapp\\\\components\\\\List items\\\\image.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as firebase from 'firebase';\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onChooseImagePress = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 2:\n              result = _context.sent;\n              console.log(result);\n\n              if (!result.cancelled) {\n                _this.uploadImage(result.uri, 'test-image').then(function () {\n                  Alert.alert('success');\n                }).catch(function (error) {\n                  Alert.alert(error);\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.uploadImage = function _callee2(uri, imageName) {\n      var response, blob, ref;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch(uri));\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(response.blob());\n\n            case 5:\n              blob = _context2.sent;\n              ref = firebase.storage().ref().child('images/' + imageName);\n              return _context2.abrupt(\"return\", ref.put(blob));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        onPress: this.onChooseImagePress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nHomeScreen.navigationOptions = {\n  header: null\n};\nexport { HomeScreen as default };","map":{"version":3,"sources":["C:/Users/aqrab/OneDrive/Desktop/thesis project phase 2/front-end-react-native-mobilapp/components/List items/image.js"],"names":["React","ImagePicker","firebase","HomeScreen","onChooseImagePress","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uploadImage","uri","then","Alert","alert","catch","error","imageName","fetch","response","blob","ref","storage","child","put","Component","navigationOptions","header"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;;IAEqBC,U;;;;;;;;;;;;;;;;UAKjBC,kB,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACEH,WAAW,CAACI,uBAAZ,CAAoC;AACnDC,gBAAAA,UAAU,EAAEL,WAAW,CAACM,gBAAZ,CAA6BC,GADU;AAEnDC,gBAAAA,aAAa,EAAE,IAFoC;AAGnDC,gBAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH2C;AAInDC,gBAAAA,OAAO,EAAE;AAJ0C,eAApC,CADF;;AAAA;AACbC,cAAAA,MADa;AAOfC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACF,kBAAI,CAACA,MAAM,CAACG,SAAZ,EAAsB;AAClB,sBAAKC,WAAL,CAAiBJ,MAAM,CAACK,GAAxB,EAA6B,YAA7B,EACCC,IADD,CACO,YAAI;AACPC,kBAAAA,KAAK,CAACC,KAAN,CAAa,SAAb;AACH,iBAHD,EAICC,KAJD,CAIO,UAACC,KAAD,EAAS;AACZH,kBAAAA,KAAK,CAACC,KAAN,CAAYE,KAAZ;AACH,iBAND;AAQH;;AAjBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAmBrBN,W,GAAc,kBAAOC,GAAP,EAAWM,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACaC,KAAK,CAACP,GAAD,CADlB;;AAAA;AACJQ,cAAAA,QADI;AAAA;AAAA,+CAESA,QAAQ,CAACC,IAAT,EAFT;;AAAA;AAEJA,cAAAA,IAFI;AAGNC,cAAAA,GAHM,GAGAzB,QAAQ,CAAC0B,OAAT,GAAmBD,GAAnB,GAAyBE,KAAzB,CAA+B,YAAYN,SAA3C,CAHA;AAAA,gDAIHI,GAAG,CAACG,GAAJ,CAAQJ,IAAR,CAJG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAON;AACJ,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKtB,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAWH;;;;EA3CmCJ,KAAK,CAAC+B,S;;AAAzB5B,U,CACV6B,iB,GAAoB;AACvBC,EAAAA,MAAM,EAAG;AADc,C;SADV9B,U","sourcesContent":["import React from 'react';\r\nimport {Image ,StyleSheet, Button , Text ,View, Alert} from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as firebase from 'firebase';\r\n\r\nexport default class HomeScreen extends React.Component {\r\n    static navigationOptions = {\r\n        header : null ,\r\n\r\n    };\r\n    onChooseImagePress = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n          });\r\n          console.log(result)\r\n        if (!result.cancelled){\r\n            this.uploadImage(result.uri, 'test-image')\r\n            .then (()=>{\r\n                Alert.alert ('success');\r\n            })\r\n            .catch((error)=>{\r\n                Alert.alert(error);\r\n            });\r\n\r\n        }\r\n    }\r\n    uploadImage = async (uri,imageName)=>{\r\n        const response = await fetch(uri);\r\n        const blob = await response.blob();\r\n        var ref = firebase.storage().ref().child('images/' + imageName);\r\n        return ref.put(blob);\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <View>\r\n\r\n                <Button onPress={this.onChooseImagePress}/>\r\n\r\n                \r\n\r\n            </View>\r\n        )\r\n            \r\n        \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}