{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Thersis-Dawerha\\\\front-end-react-native-mobilapp\\\\components\\\\Authentication\\\\login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport axios from 'axios';\nimport * as SecureStore from 'expo-secure-store';\n\nvar Login = function Login(props) {\n  var _useState = useState({\n    email: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      savedUserData = _useState2[0],\n      setSavedUserData = _useState2[1];\n\n  var save = function save() {\n    return _regeneratorRuntime.async(function save$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('hello', name));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            consile.log(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var getData = function getData() {\n    var _name;\n\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('hello'));\n\n          case 3:\n            _name = _context2.sent;\n\n            if (_name !== null) {\n              setName(_name);\n            }\n\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var clickHandler = function clickHandler(req) {\n    return _regeneratorRuntime.async(function clickHandler$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            axios.post('http://192.168.1.130:5000/signin', savedUserData).then(function (req) {\n              var token = req.data.token;\n              AsyncStorage.setItem('token', token);\n              console.log(token);\n              console.log(req.data.token);\n              console.log(savedUserData);\n              console.log(\"success\");\n            }).catch(function (error) {\n              console.log(error);\n              console.log(\"error\");\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isloggedin = _useState4[0],\n      setLogged = _useState4[1];\n\n  useEffect(function () {\n    var token = AsyncStorage.getItem('token');\n\n    if (token) {\n      setLogged(true);\n      console.log(isloggedin);\n    } else {\n      setLogged(false);\n      console.log(isloggedin);\n    }\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.margin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Log in\"), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Enter your Email\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"example@xxxmail.com\",\n    onChangeText: function onChangeText(email) {\n      return setSavedUserData(_objectSpread(_objectSpread({}, savedUserData), {}, {\n        email: email\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Enter your Password\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"e.g .!@#123Aa\",\n    onChangeText: function onChangeText(password) {\n      return setSavedUserData(_objectSpread(_objectSpread({}, savedUserData), {}, {\n        password: password\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"login\",\n    onPress: clickHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  containers: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    marginTop: 20\n  },\n  margin: {\n    margin: 30\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#777',\n    padding: 8,\n    margin: 10,\n    width: 200\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/HP/Desktop/Thersis-Dawerha/front-end-react-native-mobilapp/components/Authentication/login.js"],"names":["React","useEffect","useState","AsyncStorage","axios","SecureStore","Login","props","email","password","savedUserData","setSavedUserData","save","setItem","name","consile","log","getData","getItem","setName","console","clickHandler","req","post","then","token","data","catch","error","isloggedin","setLogged","styles","margin","buttonContainer","input","StyleSheet","create","containers","flex","backgroundColor","alignItems","justifyContent","marginTop","borderWidth","borderColor","padding","width"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {StyleSheet, View, Text, ImageBackground, Button, TextInput, TouchableOpacity} from 'react-native';\r\nimport  AsyncStorage  from '@react-native-community/async-storage';\r\n// import StyledButton from '../StyledButton';\r\n// import styles from './style';\r\nimport axios from 'axios';\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\nconst Login = (props) => {\r\n// const {name,tagline,image} = props;\r\nconst [savedUserData, setSavedUserData] = useState({ email: '', password: ''});\r\n\r\nconst save = async () => {\r\ntry {\r\n        // useState({token: 'abc123'})\r\n        await AsyncStorage.setItem('hello', name)\r\n        // await AsyncStorage.setItem('token', token)\r\n    } catch (err) {\r\n        consile.log(err)\r\n    }\r\n}\r\n\r\nconst getData = async () => {\r\n    try {\r\n            let name = await AsyncStorage.getItem('hello')\r\n            if(name !== null) {\r\n                setName(name)\r\n        } \r\n    }catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     AsyncStorage.getItem('token')\r\n    // console.log(AsyncStorage.getItem('token'))\r\n    // }, [])\r\n\r\nconst clickHandler = async (req) => {\r\n\r\n   axios.post('http://192.168.1.130:5000/signin', savedUserData) //connected to the server port\r\n   .then( req=> {\r\n     const token = req.data.token\r\n     AsyncStorage.setItem('token', token)\r\n     console.log(token)\r\n\r\n    // try {\r\n    //     const token = req.data.token\r\n    //     await AsyncStorage.setItem('token', token)\r\n    // } catch (err) {\r\n    //     console.log(err)\r\n    // }\r\n\r\n    // let checkToken = AsyncStorage.getItem('token')\r\n    // console.log(checkToken)\r\n    //  SecureStore.setItemAsync('secure_token', req.data.token);\r\n    // const token =  SecureStore.getItemAsync('secure_token');\r\n    //  console.log(token)\r\n   \r\n    console.log(req.data.token)\r\n    // setSavedUserData(savedUserData)\r\n    console.log(savedUserData)\r\n    console.log(\"success\")\r\n   })\r\n   .catch((error) => {\r\n       console.log(error)\r\n       console.log(\"error\")\r\n   })\r\n\r\n}\r\n\r\n\r\nconst [isloggedin, setLogged] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    const token =  AsyncStorage.getItem('token')\r\n    \r\n    if(token) {\r\n        setLogged(true)\r\n        console.log(isloggedin)\r\n    }else{\r\n      setLogged(false)\r\n      console.log(isloggedin)\r\n    }\r\n  },[])\r\n// const getData = async () =>\r\n// {\r\n//     try{\r\n//         const value = await AsyncStorage.getItem('token')\r\n//         if(value !== null) {\r\n//         useState({ token: value})\r\n//         }\r\n//     } catch (e){\r\n\r\n//     }\r\n// }\r\n\r\n    return (\r\n        <View >\r\n            {/* <Text>{value}</Text> */}\r\n            <Text style = {styles.margin}>Log in</Text>\r\n            <View style = {styles.buttonContainer}>\r\n            {/* <Text>My name is {name}</Text> */}\r\n            <Text>Enter your Email</Text>\r\n            <TextInput \r\n            style={styles.input}\r\n            placeholder='example@xxxmail.com'\r\n            // onChangeText={(val) => setSavedUserData(val)}\r\n            onChangeText={(email) => setSavedUserData({...savedUserData, email: email})}/>\r\n\r\n            <Text>Enter your Password</Text>\r\n            <TextInput \r\n            // keyboardType='default'\r\n            style={styles.input}\r\n            placeholder='e.g .!@#123Aa'\r\n            onChangeText={(password) => setSavedUserData({...savedUserData, password:password})}/>\r\n            <Button title = \"login\" onPress = {clickHandler}/>\r\n                </View>\r\n            </View>\r\n                )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\ncontainers: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\nbuttonContainer: {\r\n    marginTop: 20\r\n},\r\nmargin: {\r\n    margin: 30\r\n},\r\ninput: {\r\n    borderWidth: 1,\r\n    borderColor: '#777',\r\n    padding: 8,\r\n    margin:10,\r\n    width: 200,\r\n}\r\n})\r\n\r\nexport default Login;\r\n\r\n"]},"metadata":{},"sourceType":"module"}