{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport firebase from 'firebase';\n\nvar Fire = function () {\n  function Fire() {\n    var _this = this;\n\n    _classCallCheck(this, Fire);\n\n    this.init = function () {\n      return firebase.initializeApp({\n        apiKey: \"AIzaSyBy_E4K8UYuBxeKHagieRgmLIaKsOGGdfA\",\n        authDomain: \"chat-app-4e1ed.firebaseapp.com\",\n        databaseURL: \"https://chat-app-4e1ed-default-rtdb.firebaseio.com\",\n        projectId: \"chat-app-4e1ed\",\n        storageBucket: \"chat-app-4e1ed.appspot.com\",\n        messagingSenderId: \"1081745367221\",\n        appId: \"1:1081745367221:web:c026781c5090e4e5139efc\",\n        measurementId: \"G-H1BSSFBPMZ\"\n      });\n    };\n\n    this.observeAuth = function () {\n      return firebase.auth().onAuthStateChanged(_this.onAuthStateChanged);\n    };\n\n    this.onAuthStateChanged = function (user) {\n      if (!user) {\n        try {\n          firebase.auth().signInAnonymously();\n        } catch (_ref) {\n          var message = _ref.message;\n          alert(message);\n        }\n      }\n    };\n\n    this.parse = function (snapshot) {\n      var _snapshot$val = snapshot.val(),\n          numberStamp = _snapshot$val.timestamp,\n          text = _snapshot$val.text,\n          user = _snapshot$val.user;\n\n      var _id = snapshot.key;\n      var timestamp = new Date(numberStamp);\n      var message = {\n        _id: _id,\n        timestamp: timestamp,\n        text: text,\n        user: user\n      };\n      console.log(message);\n      return message;\n    };\n\n    this.on = function (callback) {\n      return _this.ref.limitToLast(20).on('child_added', function (snapshot) {\n        return callback(_this.parse(snapshot));\n      });\n    };\n\n    this.send = function (messages) {\n      for (var i = 0; i < messages.length; i++) {\n        var _messages$i = messages[i],\n            text = _messages$i.text,\n            user = _messages$i.user;\n        var message = {\n          text: text,\n          user: user,\n          timestamp: _this.timestamp\n        };\n        console.log(_this);\n\n        _this.append(message);\n      }\n    };\n\n    this.append = function (message) {\n      return _this.ref.push(message);\n    };\n\n    this.init();\n    this.observeAuth();\n  }\n\n  _createClass(Fire, [{\n    key: \"off\",\n    value: function off() {\n      this.ref.off();\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return (firebase.auth().currentUser || {}).uid;\n    }\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return firebase.database().ref('messages');\n    }\n  }, {\n    key: \"timestamp\",\n    get: function get() {\n      return firebase.database.ServerValue.TIMESTAMP;\n    }\n  }]);\n\n  return Fire;\n}();\n\nFire.shared = new Fire();\nexport default Fire;","map":{"version":3,"sources":["C:/Users/User/Desktop/front-end-react-native-mobilapp/components/Fire.js"],"names":["firebase","Fire","init","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","observeAuth","auth","onAuthStateChanged","user","signInAnonymously","message","alert","parse","snapshot","val","numberStamp","timestamp","text","_id","key","Date","console","log","on","callback","ref","limitToLast","send","messages","i","length","append","push","off","currentUser","uid","database","ServerValue","TIMESTAMP","shared"],"mappings":"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","sourcesContent":["import firebase from 'firebase'; \r\n\r\n\r\nclass Fire {\r\n    constructor() {\r\n        this.init();\r\n        // if it doesnâ€™t exist then we want to sign in anonymously.\r\n        this.observeAuth();\r\n    }\r\n\r\n    init = () =>\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyBy_E4K8UYuBxeKHagieRgmLIaKsOGGdfA\",\r\n        authDomain: \"chat-app-4e1ed.firebaseapp.com\",\r\n        databaseURL: \"https://chat-app-4e1ed-default-rtdb.firebaseio.com\",\r\n        projectId: \"chat-app-4e1ed\",\r\n        storageBucket: \"chat-app-4e1ed.appspot.com\",\r\n        messagingSenderId: \"1081745367221\",\r\n        appId: \"1:1081745367221:web:c026781c5090e4e5139efc\",\r\n        measurementId: \"G-H1BSSFBPMZ\"\r\n    });\r\n\r\n    observeAuth = () =>\r\n    firebase.auth().onAuthStateChanged(this.onAuthStateChanged);\r\n\r\n    onAuthStateChanged = user => {\r\n        if (!user) {\r\n          try {\r\n            firebase.auth().signInAnonymously();\r\n        } catch ({ message }) {\r\n          alert(message);\r\n        }\r\n\r\n    }\r\n};\r\n\r\nget uid() {\r\n    return (firebase.auth().currentUser || {}).uid;\r\n  }\r\n\r\n\r\nget ref() {\r\n    return firebase.database().ref('messages');  // this is a references location to our data base which is /messages\r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n      parse = snapshot => {\r\n\r\n        const { timestamp: numberStamp, text, user } = snapshot.val();\r\n        const { key: _id } = snapshot;\r\n        const timestamp = new Date(numberStamp);\r\n        const message = {\r\n            _id,\r\n            timestamp,\r\n            text,\r\n            user,\r\n          };\r\n          console.log(message)\r\n         return message;\r\n    }\r\n\r\n  on = callback =>\r\n    this.ref\r\n      .limitToLast(20)\r\n      .on('child_added', snapshot => callback(this.parse(snapshot)));\r\n\r\n      get timestamp() {\r\n        return firebase.database.ServerValue.TIMESTAMP;\r\n      }\r\n\r\n\r\n\r\n\r\n      //Create a shape that if good for firebase and save it to our server\r\n      send = messages => {\r\n        for (let i = 0; i < messages.length; i++) {\r\n          const { text, user } = messages[i];\r\n        \r\n          const message = {\r\n            text,\r\n            user,\r\n            timestamp: this.timestamp,\r\n          };\r\n          console.log(this)\r\n          this.append(message);\r\n          \r\n        }\r\n      };\r\n       //The append function will save the message object with a unique ID\r\n      \r\n       append = message => this.ref.push(message);\r\n    \r\n    off() {\r\n        this.ref.off();\r\n      }\r\n\r\n}\r\nFire.shared = new Fire();\r\n\r\n\r\n\r\n\r\nexport default Fire;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}