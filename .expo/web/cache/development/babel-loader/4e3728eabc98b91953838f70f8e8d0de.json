{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aqrab\\\\OneDrive\\\\Desktop\\\\thesis project phase 2\\\\front-end-react-native-mobilapp\\\\node_modules\\\\react-native-navbar\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PropTypes from 'prop-types';\nimport ViewPropTypes from \"./lib\";\nimport NavbarButton from \"./NavbarButton\";\nimport styles from \"./styles\";\nvar ButtonShape = {\n  title: PropTypes.string.isRequired,\n  style: ViewPropTypes.style,\n  handler: PropTypes.func,\n  disabled: PropTypes.bool\n};\nvar TitleShape = {\n  title: PropTypes.string.isRequired,\n  tintColor: PropTypes.string,\n  ellipsizeMode: PropTypes.string,\n  numberOfLines: PropTypes.number\n};\nvar StatusBarShape = {\n  style: PropTypes.oneOf(['light-content', 'default']),\n  hidden: PropTypes.bool,\n  tintColor: PropTypes.string,\n  hideAnimation: PropTypes.oneOf(['fade', 'slide', 'none']),\n  showAnimation: PropTypes.oneOf(['fade', 'slide', 'none'])\n};\n\nfunction getButtonElement(data, style) {\n  return React.createElement(View, {\n    style: styles.navBarButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, !data || data.props ? data : React.createElement(NavbarButton, {\n    title: data.title,\n    style: [data.style, style],\n    tintColor: data.tintColor,\n    handler: data.handler,\n    accessible: data.accessible,\n    accessibilityLabel: data.accessibilityLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction getTitleElement(data) {\n  if (!data || data.props) {\n    return React.createElement(View, {\n      style: styles.customTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    }, data);\n  }\n\n  var colorStyle = data.tintColor ? {\n    color: data.tintColor\n  } : null;\n  return React.createElement(View, {\n    style: styles.navBarTitleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    ellipsizeMode: data.ellipsizeMode,\n    numberOfLines: data.numberOfLines,\n    style: [styles.navBarTitleText, data.style, colorStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, data.title));\n}\n\nvar NavigationBar = function (_Component) {\n  _inherits(NavigationBar, _Component);\n\n  var _super = _createSuper(NavigationBar);\n\n  function NavigationBar() {\n    _classCallCheck(this, NavigationBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NavigationBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.customizeStatusBar();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      this.customizeStatusBar();\n    }\n  }, {\n    key: \"customizeStatusBar\",\n    value: function customizeStatusBar() {\n      var statusBar = this.props.statusBar;\n\n      if (Platform.OS === 'ios') {\n        if (statusBar.style) {\n          StatusBar.setBarStyle(statusBar.style);\n        }\n\n        var animation = statusBar.hidden ? statusBar.hideAnimation : statusBar.showAnimation;\n        StatusBar.showHideTransition = animation;\n        StatusBar.hidden = statusBar.hidden;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          containerStyle = _this$props.containerStyle,\n          tintColor = _this$props.tintColor,\n          title = _this$props.title,\n          leftButton = _this$props.leftButton,\n          rightButton = _this$props.rightButton,\n          style = _this$props.style;\n      var customTintColor = tintColor ? {\n        backgroundColor: tintColor\n      } : null;\n      var customStatusBarTintColor = this.props.statusBar.tintColor ? {\n        backgroundColor: this.props.statusBar.tintColor\n      } : null;\n      var statusBar = null;\n\n      if (Platform.OS === 'ios') {\n        statusBar = !this.props.statusBar.hidden ? React.createElement(View, {\n          style: [styles.statusBar, customStatusBarTintColor],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 9\n          }\n        }) : null;\n      }\n\n      return React.createElement(View, {\n        style: [styles.navBarContainer, containerStyle, customTintColor],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }\n      }, statusBar, React.createElement(View, {\n        style: [styles.navBar, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, getTitleElement(title), getButtonElement(leftButton, {\n        marginLeft: 8\n      }), getButtonElement(rightButton, {\n        marginRight: 8\n      })));\n    }\n  }]);\n\n  return NavigationBar;\n}(Component);\n\nNavigationBar.propTypes = {\n  style: ViewPropTypes.style,\n  tintColor: PropTypes.string,\n  statusBar: PropTypes.shape(StatusBarShape),\n  leftButton: PropTypes.oneOfType([PropTypes.shape(ButtonShape), PropTypes.element, PropTypes.oneOf([null])]),\n  rightButton: PropTypes.oneOfType([PropTypes.shape(ButtonShape), PropTypes.element, PropTypes.oneOf([null])]),\n  title: PropTypes.oneOfType([PropTypes.shape(TitleShape), PropTypes.element, PropTypes.oneOf([null])]),\n  containerStyle: ViewPropTypes.style\n};\nNavigationBar.defaultProps = {\n  style: {},\n  tintColor: '',\n  leftButton: null,\n  rightButton: null,\n  title: null,\n  statusBar: {\n    style: 'default',\n    hidden: false,\n    hideAnimation: 'slide',\n    showAnimation: 'slide'\n  },\n  containerStyle: {}\n};\nexport { NavigationBar as default };","map":{"version":3,"sources":["C:/Users/aqrab/OneDrive/Desktop/thesis project phase 2/front-end-react-native-mobilapp/node_modules/react-native-navbar/index.js"],"names":["React","Component","PropTypes","ViewPropTypes","NavbarButton","styles","ButtonShape","title","string","isRequired","style","handler","func","disabled","bool","TitleShape","tintColor","ellipsizeMode","numberOfLines","number","StatusBarShape","oneOf","hidden","hideAnimation","showAnimation","getButtonElement","data","navBarButtonContainer","props","accessible","accessibilityLabel","getTitleElement","customTitle","colorStyle","color","navBarTitleContainer","navBarTitleText","NavigationBar","customizeStatusBar","statusBar","Platform","OS","StatusBar","setBarStyle","animation","showHideTransition","containerStyle","leftButton","rightButton","customTintColor","backgroundColor","customStatusBarTintColor","navBarContainer","navBar","marginLeft","marginRight","propTypes","shape","oneOfType","element","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  StatusBar,\n  Text,\n  View,\n  Platform,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport ViewPropTypes from './lib';\n\nimport NavbarButton from './NavbarButton';\nimport styles from './styles';\n\nconst ButtonShape = {\n  title: PropTypes.string.isRequired,\n  style: ViewPropTypes.style,\n  handler: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n\nconst TitleShape = {\n  title: PropTypes.string.isRequired,\n  tintColor: PropTypes.string,\n  ellipsizeMode: PropTypes.string,\n  numberOfLines: PropTypes.number\n};\n\nconst StatusBarShape = {\n  style: PropTypes.oneOf(['light-content', 'default']),\n  hidden: PropTypes.bool,\n  tintColor: PropTypes.string,\n  hideAnimation: PropTypes.oneOf(['fade', 'slide', 'none']),\n  showAnimation: PropTypes.oneOf(['fade', 'slide', 'none']),\n};\n\nfunction getButtonElement(data, style) {\n  return (\n    <View style={styles.navBarButtonContainer}>\n      {(!data || data.props) ? data : (\n        <NavbarButton\n          title={data.title}\n          style={[data.style, style]}\n          tintColor={data.tintColor}\n          handler={data.handler}\n          accessible={data.accessible}\n          accessibilityLabel={data.accessibilityLabel}\n        />\n      )}\n    </View>\n  );\n}\n\nfunction getTitleElement(data) {\n  if (!data || data.props) {\n    return <View style={styles.customTitle}>{data}</View>;\n  }\n\n  const colorStyle = data.tintColor ? { color: data.tintColor } : null;\n\n  return (\n    <View style={styles.navBarTitleContainer}>\n      <Text ellipsizeMode={data.ellipsizeMode} numberOfLines={data.numberOfLines} style={[styles.navBarTitleText, data.style, colorStyle]}>\n        {data.title}\n      </Text>\n    </View>\n  );\n}\n\nexport default class NavigationBar extends Component {\n  static propTypes = {\n    style: ViewPropTypes.style,\n    tintColor: PropTypes.string,\n    statusBar: PropTypes.shape(StatusBarShape),\n    leftButton: PropTypes.oneOfType([\n      PropTypes.shape(ButtonShape),\n      PropTypes.element,\n      PropTypes.oneOf([null]),\n    ]),\n    rightButton: PropTypes.oneOfType([\n      PropTypes.shape(ButtonShape),\n      PropTypes.element,\n      PropTypes.oneOf([null]),\n    ]),\n    title: PropTypes.oneOfType([\n      PropTypes.shape(TitleShape),\n      PropTypes.element,\n      PropTypes.oneOf([null]),\n    ]),\n    containerStyle: ViewPropTypes.style,\n  };\n\n  static defaultProps = {\n    style: {},\n    tintColor: '',\n    leftButton: null,\n    rightButton: null,\n    title: null,\n    statusBar: {\n      style: 'default',\n      hidden: false,\n      hideAnimation: 'slide',\n      showAnimation: 'slide',\n    },\n    containerStyle: {},\n  };\n\n  componentDidMount() {\n    this.customizeStatusBar();\n  }\n\n  componentWillReceiveProps() {\n    this.customizeStatusBar();\n  }\n\n  customizeStatusBar() {\n    const { statusBar } = this.props;\n    if (Platform.OS === 'ios') {\n      if (statusBar.style) {\n        StatusBar.setBarStyle(statusBar.style);\n      }\n\n      const animation = statusBar.hidden ?\n        statusBar.hideAnimation : statusBar.showAnimation;\n\n      StatusBar.showHideTransition = animation;\n      StatusBar.hidden = statusBar.hidden;\n    }\n  }\n\n  render() {\n    const {\n      containerStyle,\n      tintColor,\n      title,\n      leftButton,\n      rightButton,\n      style,\n    } = this.props;\n    const customTintColor = tintColor ? { backgroundColor: tintColor } : null;\n\n    const customStatusBarTintColor = this.props.statusBar.tintColor ?\n      { backgroundColor: this.props.statusBar.tintColor } : null;\n\n    let statusBar = null;\n\n    if (Platform.OS === 'ios') {\n      statusBar = !this.props.statusBar.hidden ?\n        <View style={[styles.statusBar, customStatusBarTintColor]} /> : null;\n    }\n\n    return (\n      <View style={[styles.navBarContainer, containerStyle, customTintColor]}>\n        {statusBar}\n        <View style={[styles.navBar, style]}>\n          {getTitleElement(title)}\n          {getButtonElement(leftButton, { marginLeft: 8 })}\n          {getButtonElement(rightButton, { marginRight: 8 })}\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}