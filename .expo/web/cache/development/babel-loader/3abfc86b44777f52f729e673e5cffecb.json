{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\front-end-react-native-mobilapp\\\\components\\\\chat\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: ''\n    };\n\n    _this.onChangeText = function (name) {\n      return _this.setState({\n        name: name\n      });\n    };\n\n    _this.onPress = function () {\n      return _this.props.navigation.navigate('Chat', {\n        name: _this.state.name\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, \"Enter your name:\"), React.createElement(TextInput, {\n        style: styles.nameInput,\n        onChangeText: this.onChangeText,\n        value: this.state.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, \"Done\")));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nvar offset = 24;\nvar styles = StyleSheet.create({\n  title: {\n    marginTop: offset,\n    marginLeft: offset,\n    fontSize: offset\n  },\n  nameInput: {\n    height: offset * 2,\n    margin: offset,\n    paddingHorizontal: offset,\n    borderColor: '#111111',\n    borderWidth: 1\n  },\n  buttonText: {\n    marginLeft: offset,\n    fontSize: offset\n  }\n});\nexport default Main;","map":{"version":3,"sources":["C:/Users/User/Desktop/front-end-react-native-mobilapp/components/chat/Main.js"],"names":["React","Main","state","name","onChangeText","setState","onPress","props","navigation","navigate","styles","title","nameInput","buttonText","Component","offset","StyleSheet","create","marginTop","marginLeft","fontSize","height","margin","paddingHorizontal","borderColor","borderWidth"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;IAGMC,I;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAORC,Y,GAAe,UAAAD,IAAI;AAAA,aAAI,MAAKE,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAJA;AAAF,OAAd,CAAJ;AAAA,K;;UAEnBG,O,GAAU;AAAA,aACR,MAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,EAAuC;AAAEN,QAAAA,IAAI,EAAE,MAAKD,KAAL,CAAWC;AAAnB,OAAvC,CADQ;AAAA,K;;;;;;;6BAID;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAED,MAAM,CAACE,SADhB;AAEE,QAAA,YAAY,EAAE,KAAKR,YAFrB;AAGE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAQE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKG,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CARF,CADF;AAcD;;;;EA9BgBb,KAAK,CAACc,S;;AAiCzB,IAAMC,MAAM,GAAG,EAAf;AAEA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,SAAS,EAAEH,MADN;AAELI,IAAAA,UAAU,EAAEJ,MAFP;AAGLK,IAAAA,QAAQ,EAAEL;AAHL,GADwB;AAM/BH,EAAAA,SAAS,EAAE;AACTS,IAAAA,MAAM,EAAEN,MAAM,GAAG,CADR;AAETO,IAAAA,MAAM,EAAEP,MAFC;AAGTQ,IAAAA,iBAAiB,EAAER,MAHV;AAITS,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,WAAW,EAAE;AALJ,GANoB;AAa/BZ,EAAAA,UAAU,EAAE;AACVM,IAAAA,UAAU,EAAEJ,MADF;AAEVK,IAAAA,QAAQ,EAAEL;AAFA;AAbmB,CAAlB,CAAf;AAmBA,eAAed,IAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View,} from 'react-native';\r\n\r\nclass Main extends React.Component {\r\n  \r\n  state = {\r\n    name: '',\r\n  };\r\n\r\n\r\n\r\n  // on change function which will set the state for the name\r\n  onChangeText = name => this.setState({ name });\r\n\r\n  onPress = () =>  \r\n    this.props.navigation.navigate('Chat', { name: this.state.name });\r\n\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Text style={styles.title}>Enter your name:</Text>\r\n        <TextInput\r\n          style={styles.nameInput}\r\n          onChangeText={this.onChangeText}\r\n          value={this.state.name}\r\n        />\r\n         {/* this is the button will switch between screen */}\r\n        <TouchableOpacity onPress={this.onPress}>\r\n          <Text style={styles.buttonText}>Done</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst offset = 24;\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    marginTop: offset,\r\n    marginLeft: offset,\r\n    fontSize: offset,\r\n  },\r\n  nameInput: {\r\n    height: offset * 2,\r\n    margin: offset,\r\n    paddingHorizontal: offset,\r\n    borderColor: '#111111',\r\n    borderWidth: 1,\r\n  },\r\n  buttonText: {\r\n    marginLeft: offset,\r\n    fontSize: offset,\r\n  },\r\n});\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}