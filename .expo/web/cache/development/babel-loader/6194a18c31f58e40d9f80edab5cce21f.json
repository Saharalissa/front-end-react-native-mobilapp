{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Thersis-Dawerha\\\\front-end-react-native-mobilapp\\\\components\\\\Authentication\\\\login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport axios from 'axios';\nimport * as SecureStore from 'expo-secure-store';\n\nvar Login = function Login(props) {\n  var _useState = useState({\n    email: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      savedUserData = _useState2[0],\n      setSavedUserData = _useState2[1];\n\n  var clickHandler = function clickHandler(req) {\n    return _regeneratorRuntime.async(function clickHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            axios.post('http://192.168.1.94:5000/signin', savedUserData).then(function _callee(req) {\n              var token, user_id, trial, userID;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      token = req.data.token;\n                      user_id = req.data.result[0].userID;\n                      _context.prev = 2;\n                      _context.next = 5;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', token));\n\n                    case 5:\n                      _context.next = 7;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('user_id', user_id));\n\n                    case 7:\n                      console.log('saved', token);\n                      _context.next = 13;\n                      break;\n\n                    case 10:\n                      _context.prev = 10;\n                      _context.t0 = _context[\"catch\"](2);\n                      console.log(_context.t0);\n\n                    case 13:\n                      _context.next = 15;\n                      return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n                    case 15:\n                      trial = _context.sent;\n                      _context.next = 18;\n                      return _regeneratorRuntime.awrap(AsyncStorage.getItem('user_id'));\n\n                    case 18:\n                      userID = _context.sent;\n                      console.log(trial);\n\n                      if (trial) {\n                        console.log('token is saved in storage, token length', trial.length);\n                      } else {\n                        console.log('nooooo token in storage');\n                      }\n\n                      console.log(savedUserData);\n                      console.log(\"success\");\n\n                    case 23:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, [[2, 10]], Promise);\n            }).catch(function (error) {\n              console.log(\"error\", error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkIfLoggedIn = function checkIfLoggedIn() {\n    var trial;\n    return _regeneratorRuntime.async(function checkIfLoggedIn$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 3:\n            trial = _context3.sent;\n\n            if (trial) {\n              console.log('loggedin', trial);\n            } else {\n              console.log('not loggedin');\n            }\n\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var logout = function logout() {\n    var isloggedin;\n    return _regeneratorRuntime.async(function logout$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem('token'));\n\n          case 3:\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem('user_id'));\n\n          case 5:\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user_id'));\n\n          case 7:\n            isloggedin = _context4.sent;\n            console.log(isloggedin);\n            _context4.next = 14;\n            break;\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.margin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Log in\"), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Enter your Email\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"example@xxxmail.com\",\n    onChangeText: function onChangeText(email) {\n      return setSavedUserData(_objectSpread(_objectSpread({}, savedUserData), {}, {\n        email: email\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Enter your Password\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"e.g .!@#123Aa\",\n    onChangeText: function onChangeText(password) {\n      return setSavedUserData(_objectSpread(_objectSpread({}, savedUserData), {}, {\n        password: password\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"login\",\n    onPress: clickHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"logout\",\n    onPress: logout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  containers: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    marginTop: 20\n  },\n  margin: {\n    margin: 30\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#777',\n    padding: 8,\n    margin: 10,\n    width: 200\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/HP/Desktop/Thersis-Dawerha/front-end-react-native-mobilapp/components/Authentication/login.js"],"names":["React","useEffect","useState","AsyncStorage","axios","SecureStore","Login","props","email","password","savedUserData","setSavedUserData","clickHandler","req","post","then","token","data","user_id","result","userID","setItem","console","log","getItem","trial","length","catch","error","checkIfLoggedIn","logout","removeItem","isloggedin","styles","margin","buttonContainer","input","StyleSheet","create","containers","flex","backgroundColor","alignItems","justifyContent","marginTop","borderWidth","borderColor","padding","width"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {StyleSheet, View, Text, ImageBackground, Button, TextInput} from 'react-native';\r\nimport  AsyncStorage  from '@react-native-community/async-storage';\r\n// import StyledButton from '../StyledButton';\r\n// import styles from './style';\r\nimport axios from 'axios';\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\nconst Login = (props) => {\r\n// const {name,tagline,image} = props;\r\nconst [savedUserData, setSavedUserData] = useState({ email: '', password: ''});\r\n \r\n//LOGIN button function\r\nconst clickHandler = async (req) => {\r\n   axios.post('http://192.168.1.94:5000/signin', savedUserData) //connected to the server port\r\n   .then(async req =>{\r\n    //  console.log(req.data)\r\n     const token = req.data.token\r\n     const user_id = req.data.result[0].userID\r\n    try {\r\n        //to save token of logged in user in the storage\r\n     await AsyncStorage.setItem('token', token) \r\n     await AsyncStorage.setItem('user_id',user_id)\r\n     console.log('saved', token)\r\n     }\r\n    catch (e){\r\n    console.log(e)\r\n    }\r\n        //to get token of logged in user in the storage\r\n    const trial = await AsyncStorage.getItem('token')\r\n    const userID = await AsyncStorage.getItem('user_id')\r\n    console.log(trial)\r\n    if (trial) {  //trial.length\r\n        console.log('token is saved in storage, token length', trial.length)\r\n    } else {\r\n       console.log('nooooo token in storage')\r\n    }\r\n    // setSavedUserData(savedUserData)\r\n    console.log(savedUserData)\r\n    console.log(\"success\")\r\n   })\r\n   .catch((error) => {\r\n       console.log(\"error\", error)\r\n   })\r\n   \r\n}\r\n//this function is only for checking if storage is filled with token of it is empty\r\n//it is called in check button inside render\r\nconst checkIfLoggedIn = async () => {\r\ntry {\r\n     const trial = await AsyncStorage.getItem('token')\r\n     \r\n    if (trial) {\r\n        console.log('loggedin', trial)\r\n    } else {\r\n        console.log('not loggedin')\r\n    }\r\n}catch (e){\r\nconsole.log(e)\r\n}\r\n \r\n  }; \r\n//to logout and clear storage for token\r\n  const logout = async () => {\r\n      try {\r\n          await AsyncStorage.removeItem('token')\r\n          await AsyncStorage.removeItem('user_id')\r\n          const isloggedin = await AsyncStorage.getItem('user_id')\r\n          console.log(isloggedin)\r\n             }catch(e){\r\n                console.log(e)\r\n          }\r\n    }\r\n    return (\r\n        <View >\r\n            {/* <Text>{value}</Text> */}\r\n            <Text style = {styles.margin}>Log in</Text>\r\n            <View style = {styles.buttonContainer}>\r\n            {/* <Text>My name is {name}</Text> */}\r\n            <Text>Enter your Email</Text>\r\n            <TextInput \r\n            style={styles.input}\r\n            placeholder='example@xxxmail.com'\r\n            // onChangeText={(val) => setSavedUserData(val)}\r\n            onChangeText={(email) => setSavedUserData({...savedUserData, email: email})}/>\r\n\r\n            <Text>Enter your Password</Text>\r\n            <TextInput \r\n            // keyboardType='default'\r\n            style={styles.input}\r\n            placeholder='e.g .!@#123Aa'\r\n            onChangeText={(password) => setSavedUserData({...savedUserData, password:password})}/>\r\n            <Button title = \"login\" onPress = {clickHandler}/>\r\n            {/* <Button title = \"check\" onPress = { checkIfLoggedIn}/> */}\r\n            <Button title = \"logout\" onPress = {logout}/>\r\n                </View>\r\n            </View>\r\n                )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\ncontainers: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\nbuttonContainer: {\r\n    marginTop: 20\r\n},\r\nmargin: {\r\n    margin: 30\r\n},\r\ninput: {\r\n    borderWidth: 1,\r\n    borderColor: '#777',\r\n    padding: 8,\r\n    margin:10,\r\n    width: 200,\r\n}\r\n})\r\n\r\nexport default Login;\r\n\r\n"]},"metadata":{},"sourceType":"module"}