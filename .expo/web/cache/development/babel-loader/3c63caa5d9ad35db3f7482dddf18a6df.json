{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Mobileside\\\\front-end-react-native-mobilapp\\\\components\\\\Profile\\\\editProfile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { storage } from \"../../Fire\";\nimport * as ImagePicker from 'expo-image-picker';\nimport axios from 'axios';\n\nvar EditProfile = function EditProfile(props) {\n  console.log(props.route.params.id);\n\n  var _useState = useState({\n    username: props.route.params.username,\n    email: props.route.params.email,\n    phoneNumber: props.route.params.phoneNumber,\n    location: 'Jordan-Amman',\n    image: props.route.params.image\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      editProfile = _useState2[0],\n      setEditProfile = _useState2[1];\n\n  console.log(editProfile);\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var onChooseImagePress = function onChooseImagePress() {\n    var result, json;\n    return _regeneratorRuntime.async(function onChooseImagePress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              json = JSON.stringify(result.height);\n              setImage(result.uri);\n              uploadImage(result.uri, json).then(function () {\n                console.log('success');\n              }).catch(function (error) {\n                console.log(error);\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage(uri, imageName) {\n    var response, blob, ref, saved;\n    return _regeneratorRuntime.async(function uploadImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context2.sent;\n            ref = storage.ref().child('images/' + imageName).put(blob);\n            saved = storage.ref(\"images\").child(imageName).getDownloadURL().then(function (url) {\n              setEditProfile(_objectSpread(_objectSpread({}, editProfile), {}, {\n                image: url\n              }));\n              console.log(url);\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSubmit = function onSubmit() {\n    axios.put(\"http://192.168.1.94:5000/UsersUpdate/\" + props.route.params.id, editProfile).then(function (req) {\n      console.log(req);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    console.log(editProfile);\n    props.navigation.navigate(\"Profile\");\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      paddingTop: 50\n    },\n    tinyLogo: {\n      width: 150,\n      height: 150\n    },\n    logo: {\n      width: 66,\n      height: 58\n    }\n  });\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return props.navigation.openDrawer();\n    },\n    title: \"menu\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"update profile\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, editProfile.image && React.createElement(Image, {\n    source: {\n      uri: editProfile.image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 27\n    }\n  }), React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: onChooseImagePress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  })), React.createElement(\"input\", {\n    value: editProfile.username,\n    onChange: function onChange(e) {\n      return setEditProfile(_objectSpread(_objectSpread({}, editProfile), {}, {\n        username: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }), React.createElement(\"input\", {\n    value: editProfile.email,\n    onChange: function onChange(e) {\n      return setEditProfile(_objectSpread(_objectSpread({}, editProfile), {}, {\n        email: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }), React.createElement(\"input\", {\n    value: editProfile.phoneNumber,\n    onChange: function onChange(e) {\n      return setEditProfile(_objectSpread(_objectSpread({}, editProfile), {}, {\n        phoneNumber: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }), React.createElement(Button, {\n    onPress: onSubmit,\n    title: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default EditProfile;","map":{"version":3,"sources":["C:/Users/HP/Desktop/Mobileside/front-end-react-native-mobilapp/components/Profile/editProfile.js"],"names":["React","useState","storage","ImagePicker","axios","EditProfile","props","console","log","route","params","id","username","email","phoneNumber","location","image","editProfile","setEditProfile","setImage","onChooseImagePress","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","json","JSON","stringify","height","uri","uploadImage","then","catch","error","imageName","fetch","response","blob","ref","child","put","saved","getDownloadURL","url","onSubmit","req","navigation","navigate","styles","StyleSheet","create","container","paddingTop","tinyLogo","width","logo","openDrawer","e","target","value"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA8B,OAA9B;;;;;;;AAEA,SAASC,OAAT;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAA/B;;AAD+B,kBAEWV,QAAQ,CAAC;AAACW,IAAAA,QAAQ,EAAEN,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBE,QAA9B;AAAwCC,IAAAA,KAAK,EAAEP,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBG,KAAlE;AAAyEC,IAAAA,WAAW,EAAER,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBI,WAAzG;AAAsHC,IAAAA,QAAQ,EAAC,cAA/H;AAA+IC,IAAAA,KAAK,EAACV,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBM;AAAxK,GAAD,CAFnB;AAAA;AAAA,MAEpBC,WAFoB;AAAA,MAEPC,cAFO;;AAG3BX,EAAAA,OAAO,CAACC,GAAR,CAAYS,WAAZ;;AAH2B,mBAKDhB,QAAQ,EALP;AAAA;AAAA,MAKpBe,KALoB;AAAA,MAKbG,QALa;;AAM3B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACLjB,WAAW,CAACkB,uBAAZ,CAAoC;AACnDC,cAAAA,UAAU,EAAEnB,WAAW,CAACoB,gBAAZ,CAA6BC,GADU;AAEnDC,cAAAA,aAAa,EAAE,IAFoC;AAGnDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH2C;AAInDC,cAAAA,OAAO,EAAE;AAJ0C,aAApC,CADK;;AAAA;AACpBC,YAAAA,MADoB;AAOtBrB,YAAAA,OAAO,CAACC,GAAR,CAAYoB,MAAZ;;AACF,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAsB;AAChBC,cAAAA,IADgB,GACTC,IAAI,CAACC,SAAL,CAAeJ,MAAM,CAACK,MAAtB,CADS;AAEpBd,cAAAA,QAAQ,CAACS,MAAM,CAACM,GAAR,CAAR;AACEC,cAAAA,WAAW,CAACP,MAAM,CAACM,GAAR,EAAcJ,IAAd,CAAX,CACCM,IADD,CACO,YAAI;AAChB7B,gBAAAA,OAAO,CAACC,GAAR,CAAa,SAAb;AACM,eAHD,EAIC6B,KAJD,CAIO,UAACC,KAAD,EAAS;AACZ/B,gBAAAA,OAAO,CAACC,GAAR,CAAa8B,KAAb;AACH,eAND;AAOH;;AAlBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAoBO,MAAMH,WAAW,GAAG,SAAdA,WAAc,CAAOD,GAAP,EAAWK,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGC,KAAK,CAACN,GAAD,CADR;;AAAA;AACdO,YAAAA,QADc;AAAA;AAAA,6CAEDA,QAAQ,CAACC,IAAT,EAFC;;AAAA;AAEdA,YAAAA,IAFc;AAGbC,YAAAA,GAHa,GAGPzC,OAAO,CAACyC,GAAR,GAAcC,KAAd,CAAoB,YAAYL,SAAhC,EAA2CM,GAA3C,CAA+CH,IAA/C,CAHO;AAIdI,YAAAA,KAJc,GAIP5C,OAAO,CAACyC,GAAR,CAAY,QAAZ,EAAsBC,KAAtB,CAA4BL,SAA5B,EAAuCQ,cAAvC,GAAwDX,IAAxD,CAA6D,UAAAY,GAAG,EAAI;AAChF9B,cAAAA,cAAc,iCAAKD,WAAL;AAAkBD,gBAAAA,KAAK,EAACgC;AAAxB,iBAAd;AACCzC,cAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAZ;AACY,aAHD,CAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AASP,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AACpB7C,IAAAA,KAAK,CAACyC,GAAN,CAAU,0CAAyCvC,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAAtE,EAA0EM,WAA1E,EACCmB,IADD,CACM,UAAAc,GAAG,EAAI;AACV3C,MAAAA,OAAO,CAACC,GAAR,CAAY0C,GAAZ;AACF,KAHD,EAICb,KAJD,CAIO,UAACC,KAAD,EAAW;AACd/B,MAAAA,OAAO,CAACC,GAAR,CAAY8B,KAAZ;AACH,KAND;AAOA/B,IAAAA,OAAO,CAACC,GAAR,CAAYS,WAAZ;AACAX,IAAAA,KAAK,CAAC6C,UAAN,CAAiBC,QAAjB,CAA0B,SAA1B;AAAsC,GATxC;;AAWJ,MAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAE;AADH,KADkB;AAI7BC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,GADC;AAER1B,MAAAA,MAAM,EAAE;AAFA,KAJmB;AAQ7B2B,IAAAA,IAAI,EAAE;AACJD,MAAAA,KAAK,EAAE,EADH;AAEJ1B,MAAAA,MAAM,EAAE;AAFJ;AARuB,GAAlB,CAAf;AAaA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAM3B,KAAK,CAAC6C,UAAN,CAAiBU,UAAjB,EAAN;AAAA,KAAjB;AAAsD,IAAA,KAAK,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC5C,WAAW,CAACD,KAAZ,IAAqB,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEkB,MAAAA,GAAG,EAAEjB,WAAW,CAACD;AAAnB,KAAf;AAA2C,IAAA,KAAK,EAAE;AAAE2C,MAAAA,KAAK,EAAE,GAAT;AAAc1B,MAAAA,MAAM,EAAE;AAAtB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtB,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gCAAd;AAA+C,IAAA,OAAO,EAAEb,kBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,EAOG;AAAQ,IAAA,KAAK,EAAIH,WAAW,CAACL,QAA7B;AAAuC,IAAA,QAAQ,EAAI,kBAACkD,CAAD;AAAA,aAAO5C,cAAc,iCAAMD,WAAN;AAAoBL,QAAAA,QAAQ,EAAGkD,CAAC,CAACC,MAAF,CAASC;AAAxC,SAArB;AAAA,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,EAQG;AAAQ,IAAA,KAAK,EAAI/C,WAAW,CAACJ,KAA7B;AAAoC,IAAA,QAAQ,EAAI,kBAACiD,CAAD;AAAA,aAAO5C,cAAc,iCAAMD,WAAN;AAAoBJ,QAAAA,KAAK,EAAEiD,CAAC,CAACC,MAAF,CAASC;AAApC,SAArB;AAAA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARH,EASG;AAAQ,IAAA,KAAK,EAAI/C,WAAW,CAACH,WAA7B;AAA0C,IAAA,QAAQ,EAAI,kBAACgD,CAAD;AAAA,aAAO5C,cAAc,iCAAMD,WAAN;AAAoBH,QAAAA,WAAW,EAAGgD,CAAC,CAACC,MAAF,CAASC;AAA3C,SAArB;AAAA,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATH,EAUE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAGf,QAAlB;AAA4B,IAAA,KAAK,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADA,CADF;AAgBC,CA3ED;;AA4EA,eAAe5C,WAAf","sourcesContent":["import React, { useState}from 'react';\r\nimport {View, Text, Image, StyleSheet, Button,ScrollView } from 'react-native';\r\nimport { storage } from '../../Fire'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import StyledButton from '../StyledButton';\r\n// import styles from './style';\r\nimport axios from 'axios';\r\n// import AsyncStorage from '@react-native-community/async-storage';\r\nconst EditProfile = (props) => {\r\nconsole.log(props.route.params.id)\r\n    const [editProfile, setEditProfile] = useState({username: props.route.params.username, email: props.route.params.email, phoneNumber: props.route.params.phoneNumber, location:'Jordan-Amman', image:props.route.params.image});\r\n    console.log(editProfile);\r\n    //user's profile image\r\n    const [image, setImage] = useState()\r\n    const onChooseImagePress = async () => {\r\n       let result = await ImagePicker.launchImageLibraryAsync({\r\n           mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n           allowsEditing: true,\r\n           aspect: [4, 3],\r\n           quality: 1,\r\n         });\r\n         console.log(result)\r\n       if (!result.cancelled){\r\n         var json = JSON.stringify(result.height)\r\n         setImage(result.uri)\r\n           uploadImage(result.uri , json)\r\n           .then (()=>{\r\n      console.log ('success');\r\n           })\r\n           .catch((error)=>{\r\n               console.log (error);\r\n           });\r\n       }\r\n     }\r\n           const uploadImage = async (uri,imageName)=>{\r\n           const response = await fetch(uri);\r\n           const blob = await response.blob();\r\n           const  ref = storage.ref().child('images/' + imageName).put(blob);\r\n           const saved =storage.ref(\"images\").child(imageName).getDownloadURL().then(url => { \r\n            setEditProfile({...editProfile ,image:url})\r\n             console.log(url)\r\n                        })\r\n            }\r\n    const onSubmit = () =>{\r\n      axios.put(`http://192.168.1.94:5000/UsersUpdate/`+ props.route.params.id, editProfile)\r\n      .then(req => {\r\n         console.log(req)\r\n      })\r\n      .catch((error) => {\r\n          console.log(error);\r\n      })\r\n      console.log(editProfile)\r\n      props.navigation.navigate(\"Profile\") }\r\n//get id from local storage to know which user profile\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      paddingTop: 50,\r\n    },\r\n    tinyLogo: {\r\n      width: 150,\r\n      height: 150,\r\n    },\r\n    logo: {\r\n      width: 66,\r\n      height: 58,\r\n    },\r\n  });\r\nreturn (\r\n  <ScrollView>\r\n  <View>\r\n    <Button onPress={() => props.navigation.openDrawer()} title=\"menu\"/>\r\n    <Text>update profile</Text>\r\n    <View>\r\n    {editProfile.image && <Image source={{ uri: editProfile.image }} style={{ width: 200, height: 200 }} />}\r\n      <Button title=\"Pick an image from camera roll\" onPress={onChooseImagePress} />\r\n   </View>\r\n     <input  value = {editProfile.username} onChange = {(e) => setEditProfile({ ...editProfile , username : e.target.value})}/>\r\n     <input  value = {editProfile.email} onChange = {(e) => setEditProfile({ ...editProfile , email: e.target.value})}/>\r\n     <input  value = {editProfile.phoneNumber} onChange = {(e) => setEditProfile({ ...editProfile , phoneNumber : e.target.value})}/>\r\n    <Button onPress= {onSubmit} title=\"submit\"/>\r\n </View>\r\n </ScrollView>\r\n)\r\n}\r\nexport default EditProfile;"]},"metadata":{},"sourceType":"module"}