{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\aqrab\\\\OneDrive\\\\Desktop\\\\thesis project phase 2\\\\front-end-react-native-mobilapp\\\\components\\\\List items\\\\edit.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar TodoItem = function TodoItem(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isEditing = _useState4[0],\n      setEdit = _useState4[1];\n\n  var handleEdit = function handleEdit() {\n    props.editHandler(props.todoKey, text);\n    setText(\"\");\n    setEdit(false);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, isEditing ? React.createElement(TextInput, {\n    value: text,\n    onChangeText: setText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, props.title), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Delete\",\n    onPress: function onPress() {\n      return props.pressHandler(props.todoKey);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), isEditing ? React.createElement(Button, {\n    title: \"Save\",\n    onPress: handleEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }) : React.createElement(Button, {\n    title: \"Edit\",\n    onPress: function onPress() {\n      return setEdit(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }))));\n};\n\nexport default TodoItem;","map":{"version":3,"sources":["C:/Users/aqrab/OneDrive/Desktop/thesis project phase 2/front-end-react-native-mobilapp/components/List items/edit.js"],"names":["React","useState","TodoItem","props","text","setText","isEditing","setEdit","handleEdit","editHandler","todoKey","title","pressHandler"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAMC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,kBACDF,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,MAClBG,IADkB;AAAA,MACZC,OADY;;AAAA,mBAEIJ,QAAQ,CAAC,KAAD,CAFZ;AAAA;AAAA,MAElBK,SAFkB;AAAA,MAEPC,OAFO;;AAI3B,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBL,IAAAA,KAAK,CAACM,WAAN,CAAkBN,KAAK,CAACO,OAAxB,EAAiCN,IAAjC;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAJH;;AAME,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,GACN,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,IAAlB;AAAwB,IAAA,YAAY,EAAEC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAK,CAACQ,KAAb,CAHN,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE;AAAA,aAAMR,KAAK,CAACS,YAAN,CAAmBT,KAAK,CAACO,OAAzB,CAAN;AAAA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,SAAS,GACN,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAEE,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEN,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAE;AAAA,aAAMD,OAAO,CAAC,IAAD,CAAb;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJN,CALF,CADF,CADF;AAiBO,CA3BR;;AA6BO,eAAeL,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {View, Text, ImageBackground,TextInput,Button} from 'react-native';\r\n\r\n\r\n\r\n\r\n const TodoItem = props => {\r\n  const [text, setText] = useState(\"\");\r\n  const [isEditing, setEdit] = useState(false);\r\n\r\nconst handleEdit = () => {\r\n    props.editHandler(props.todoKey, text);\r\n    setText(\"\");\r\n    setEdit(false);\r\n  };\r\n\r\n  return (\r\n    <View >\r\n      <View >\r\n        {isEditing \r\n          ? <TextInput value={text} onChangeText={setText}  />\r\n          : <Text>{props.title}</Text>\r\n        }\r\n        <View >\r\n          <Button title=\"Delete\" onPress={() => props.pressHandler(props.todoKey)}  />\r\n          {isEditing \r\n            ? <Button title=\"Save\" onPress={handleEdit}  />\r\n            : <Button title=\"Edit\" onPress={() => setEdit(true)}  />\r\n          }\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n        }\r\n\r\n        export default TodoItem\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import {View, Text, ImageBackground,TextInput,Button} from 'react-native';\r\n// import { storage } from './firbase'\r\n// import ImagePicker from 'react-native-image-picker'\r\n// import axios from 'axios';\r\n\r\n// const EditItems = (props) => {\r\n//     console.log(props)\r\n//     const [orderData, setOrderData] = useState({  category: '', quantity: '', weight: '', description: '', price:''\r\n//     ,image:null, location:localStorage.getItem('location'),\r\n//     status:\"Pending\", user_id:localStorage.getItem('user_id')})\r\n//    console.log(orderData)\r\n\r\n\r\n    \r\n\r\n// const Edit = () =>{\r\n//     axios.post(\"http://localhost:5000/items\",orderData).then( res => {\r\n       \r\n//     })\r\n//     .catch((error) => {\r\n//         console.log(error);\r\n//     })\r\n//     console.log(orderData)\r\n// }\r\n\r\n\r\n//     return (\r\n//         <View >\r\n//             <View>\r\n//             <Text>category:</Text>\r\n//             <TextInput\r\n//             style={{height: 40}}\r\n//             placeholder=\"Type here your category!\"\r\n//             onChangeText={text => setOrderData({...orderData ,category:text})}\r\n//             defaultValue={orderData.category}\r\n//              />\r\n//              <Text>quantity:</Text>\r\n//             <TextInput\r\n//             style={{height: 40}}\r\n//             placeholder=\"Type here the quantity!\"\r\n//             onChangeText={text => setOrderData({...orderData ,quantity:text})}\r\n//             defaultValue={orderData.quantity}\r\n//              />\r\n//              <Text>weight:</Text>\r\n//             <TextInput\r\n//             style={{height: 40}}\r\n//             placeholder=\"Type here the weight!\"\r\n//             onChangeText={text => setOrderData({...orderData ,weight:text})}\r\n//             defaultValue={orderData.weight}\r\n//              />\r\n//              <Text>description:</Text>\r\n//             <TextInput\r\n//             style={{height: 40}}\r\n//             placeholder=\"Type here the description!\"\r\n//             onChangeText={text => setOrderData({...orderData ,description:text})}\r\n//             defaultValue={orderData.description}\r\n//              />\r\n//              <Text>price:</Text>\r\n//             <TextInput\r\n//             style={{height: 40}}\r\n//             placeholder=\"Type here the price!\"\r\n//             onChangeText={text => setOrderData({...orderData ,price:text})}\r\n//             defaultValue={orderData.price}\r\n//              />\r\n//               <Text>image:</Text>\r\n//               <TextInput\r\n//             style={{height: 40}}\r\n//             placeholder=\"enter url\"\r\n//             onChangeText={text => setOrderData({...orderData ,image:text})}\r\n//             defaultValue={orderData.image}\r\n//              />\r\n          \r\n//             {/* <Button\r\n//         title=\"add items\"\r\n//         onPress={addItems}\r\n//       /> */}\r\n//             </View>\r\n\r\n//         </View>\r\n//     )\r\n// }\r\n\r\n// export default EditItems"]},"metadata":{},"sourceType":"module"}