{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Thersis-Dawerha\\\\front-end-react-native-mobilapp\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Photo from \"./components/Authentication/imagePicker\";\nimport Login from \"./components/Authentication/login\";\nimport Signup from \"./components/Authentication/signup\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { launchCamera, launchImageLibrary } from 'react-native-image-picker';\nimport Constants from 'expo-constants';\nimport axios from 'axios';\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState({\n    username: '',\n    email: '',\n    password: '',\n    phoneNumber: '',\n    location: '',\n    image: null\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userData = _useState4[0],\n      setUserData = _useState4[1];\n\n  var clickHandler = function clickHandler() {\n    axios.post('http://192.168.1.130:5000/signup', userData).then(function (req) {\n      console.log(req.data);\n      console.log(req.data.token);\n      console.log(userData);\n      console.log(\"success\");\n    }).catch(function (error) {\n      console.log(error);\n      console.log(\"error\");\n    });\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(Signup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/HP/Desktop/Thersis-Dawerha/front-end-react-native-mobilapp/App.js"],"names":["StatusBar","React","useEffect","useState","Photo","Login","Signup","ImagePicker","launchCamera","launchImageLibrary","Constants","axios","App","image","setImage","username","email","password","phoneNumber","location","userData","setUserData","clickHandler","post","then","req","console","log","data","token","catch","error","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","flex","alignItems","justifyContent","styles","StyleSheet","create","container","backgroundColor"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;;;;;AAEA,OAAOC,KAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAAQC,YAAR,EAAsBC,kBAAtB,QAA+C,2BAA/C;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACFT,QAAQ,CAAC,IAAD,CADN;AAAA;AAAA,MACrBU,KADqB;AAAA,MACdC,QADc;;AAAA,mBAEIX,QAAQ,CAAC;AAAGY,IAAAA,QAAQ,EAAE,EAAb;AAAiBC,IAAAA,KAAK,EAAE,EAAxB;AAA4BC,IAAAA,QAAQ,EAAE,EAAtC;AAA0CC,IAAAA,WAAW,EAAE,EAAvD;AAA2DC,IAAAA,QAAQ,EAAE,EAArE;AAAyEN,IAAAA,KAAK,EAAE;AAAhF,GAAD,CAFZ;AAAA;AAAA,MAErBO,QAFqB;AAAA,MAEXC,WAFW;;AAK9B,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvBX,IAAAA,KAAK,CAACY,IAAN,CAAW,kCAAX,EAA+CH,QAA/C,EACCI,IADD,CACO,UAAAC,GAAG,EAAG;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,KAArB;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,KARD,EASCG,KATD,CASO,UAACC,KAAD,EAAW;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,KAZD;AAaF,GAfF;;AAiBEzB,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK8B,QAAQ,CAACC,EAAT,KAAgB,KADrB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAE4B1B,WAAW,CAAC2B,mCAAZ,EAF5B;;AAAA;AAAA;AAEWC,cAAAA,MAFX,yBAEWA,MAFX;;AAGG,kBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBC,gBAAAA,KAAK,CAAC,2DAAD,CAAL;AACD;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACG9B,WAAW,CAAC+B,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAEhC,WAAW,CAACiC,gBAAZ,CAA6BC,GADY;AAErDC,cAAAA,aAAa,EAAE,IAFsC;AAGrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,cAAAA,OAAO,EAAE;AAJ4C,aAApC,CADH;;AAAA;AACZC,YAAAA,MADY;AAQhBnB,YAAAA,OAAO,CAACC,GAAR,CAAYkB,MAAZ;;AAEA,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACrBhC,cAAAA,QAAQ,CAAC+B,MAAM,CAACE,GAAR,CAAR;AACD;;AAZe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAgBA,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AASD;AAmBD,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETO,IAAAA,eAAe,EAAE,MAFR;AAGTN,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { StyleSheet, Text, View, Platform, Button, Image, TextInput } from 'react-native';\r\nimport Photo from './components/Authentication/imagePicker';\r\nimport Login from './components/Authentication/login';\r\nimport Signup from './components/Authentication/signup';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport {launchCamera, launchImageLibrary} from 'react-native-image-picker';\r\nimport Constants from 'expo-constants';\r\nimport axios from 'axios';\r\n\r\nexport default function App() {\r\n  const [image, setImage] = useState(null);\r\n  const [userData, setUserData] = useState({  username: '', email: '', password: '', phoneNumber: '', location: '', image: null});\r\n\r\n\r\nconst clickHandler = () => {\r\n   \r\n    axios.post('http://192.168.1.130:5000/signup', userData) //connected to the server port\r\n    .then( req=> {\r\n     console.log(req.data)\r\n    //  localStorage.setItem('token', req.data.token)\r\n     console.log(req.data.token)\r\n     // setSavedUserData(savedUserData)\r\n     console.log(userData)\r\n     console.log(\"success\")\r\n    })\r\n    .catch((error) => {\r\n        console.log(error)\r\n        console.log(\"error\")\r\n    })\r\n }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== 'web') {\r\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== 'granted') {\r\n          alert('Sorry, we need camera roll permissions to make this work!');\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    \r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Signup/>\r\n      {/* <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n      {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\r\n      <Button title=\"save image\" onPress={saveImage} /> */}\r\n    </View>\r\n  );\r\n}\r\n\r\n// export default function App() {\r\n//   // const [name, setName] = useState('Sahar')\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text>hello world!</Text>\r\n      \r\n//       {/* <Text>Mobile app</Text> */}\r\n  \r\n//       {/* <Login /> */}\r\n//       {/* <Signup /> */}\r\n//       <Photo />\r\n     \r\n//       <StatusBar style=\"auto\" />\r\n//     </View>\r\n//   );\r\n// }\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}