{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Thersis-Dawerha\\\\front-end-react-native-mobilapp\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Constants, ImagePicker, Permissions } from 'expo';\nimport uuid from 'uuid';\nimport * as firebase from 'firebase';\nconsole.disableYellowBox = true;\nvar url = 'https://firebasestorage.googleapis.com/v0/b/blobtest-36ff6.appspot.com/o/Obsidian.jar?alt=media&token=93154b97-8bd9-46e3-a51f-67be47a4628a';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBFmBh5HuVSghFmvRTwaWm9jRztxRf0j68\",\n  authDomain: \"aboud-3f2c4.firebaseapp.com\",\n  databaseURL: \"https://aboud-3f2c4.firebaseio.com\",\n  projectId: \"aboud-3f2c4\",\n  storageBucket: \"aboud-3f2c4.appspot.com\",\n  messagingSenderId: \"554223798562\",\n  appId: \"1:554223798562:web:dac0bc08d01bca91417d7b\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      image: null,\n      uploading: false\n    };\n\n    _this._maybeRenderUploadingOverlay = function () {\n      if (_this.state.uploading) {\n        return React.createElement(View, {\n          style: [StyleSheet.absoluteFill, {\n            backgroundColor: 'rgba(0,0,0,0.4)',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          color: \"#fff\",\n          animating: true,\n          size: \"large\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }\n        }));\n      }\n    };\n\n    _this._maybeRenderImage = function () {\n      var image = _this.state.image;\n\n      if (!image) {\n        return;\n      }\n\n      return React.createElement(View, {\n        style: {\n          marginTop: 30,\n          width: 250,\n          borderRadius: 3,\n          elevation: 2\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          borderTopRightRadius: 3,\n          borderTopLeftRadius: 3,\n          shadowColor: 'rgba(0,0,0,1)',\n          shadowOpacity: 0.2,\n          shadowOffset: {\n            width: 4,\n            height: 4\n          },\n          shadowRadius: 5,\n          overflow: 'hidden'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 250,\n          height: 250\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        onPress: _this._copyToClipboard,\n        onLongPress: _this._share,\n        style: {\n          paddingVertical: 10,\n          paddingHorizontal: 10\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, image));\n    };\n\n    _this._share = function () {\n      Share.share({\n        message: _this.state.image,\n        title: 'Check out this photo',\n        url: _this.state.image\n      });\n    };\n\n    _this._copyToClipboard = function () {\n      Clipboard.setString(_this.state.image);\n      alert('Copied image URL to clipboard');\n    };\n\n    _this._takePhoto = function _callee() {\n      var pickerResult;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [4, 3]\n              }));\n\n            case 2:\n              pickerResult = _context.sent;\n\n              _this._handleImagePicked(pickerResult);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._pickImage = function _callee2() {\n      var pickerResult;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                allowsEditing: true,\n                aspect: [4, 3]\n              }));\n\n            case 2:\n              pickerResult = _context2.sent;\n\n              _this._handleImagePicked(pickerResult);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._handleImagePicked = function _callee3(pickerResult) {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              _this.setState({\n                uploading: true\n              });\n\n              if (pickerResult.cancelled) {\n                _context3.next = 7;\n                break;\n              }\n\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(uploadImageAsync(pickerResult.uri));\n\n            case 5:\n              uploadUrl = _context3.sent;\n\n              _this.setState({\n                image: uploadUrl\n              });\n\n            case 7:\n              _context3.next = 13;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              alert('Upload failed, sorry :(');\n\n            case 13:\n              _context3.prev = 13;\n\n              _this.setState({\n                uploading: false\n              });\n\n              return _context3.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9, 13, 16]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 2:\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var image = this.state.image;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, image ? null : React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginBottom: 20,\n          textAlign: 'center',\n          marginHorizontal: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, \"Example: Upload ImagePicker result\"), React.createElement(Button, {\n        onPress: this._pickImage,\n        title: \"Pick an image from camera roll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        onPress: this._takePhoto,\n        title: \"Take a photo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }), this._maybeRenderImage(), this._maybeRenderUploadingOverlay(), React.createElement(StatusBar, {\n        barStyle: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\n\nfunction uploadImageAsync(uri) {\n  var blob, ref, snapshot;\n  return _regeneratorRuntime.async(function uploadImageAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n\n            xhr.onload = function () {\n              resolve(xhr.response);\n            };\n\n            xhr.onerror = function (e) {\n              console.log(e);\n              reject(new TypeError('Network request failed'));\n            };\n\n            xhr.responseType = 'blob';\n            xhr.open('GET', uri, true);\n            xhr.send(null);\n          }));\n\n        case 2:\n          blob = _context5.sent;\n          ref = firebase.storage().ref().child(uuid.v4());\n          _context5.next = 6;\n          return _regeneratorRuntime.awrap(ref.put(blob));\n\n        case 6:\n          snapshot = _context5.sent;\n          blob.close();\n          _context5.next = 10;\n          return _regeneratorRuntime.awrap(snapshot.ref.getDownloadURL());\n\n        case 10:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/Thersis-Dawerha/front-end-react-native-mobilapp/App.js"],"names":["React","Constants","ImagePicker","Permissions","uuid","firebase","console","disableYellowBox","url","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","App","state","image","uploading","_maybeRenderUploadingOverlay","StyleSheet","absoluteFill","backgroundColor","alignItems","justifyContent","_maybeRenderImage","marginTop","width","borderRadius","elevation","borderTopRightRadius","borderTopLeftRadius","shadowColor","shadowOpacity","shadowOffset","height","shadowRadius","overflow","uri","_copyToClipboard","_share","paddingVertical","paddingHorizontal","Share","share","message","title","Clipboard","setString","alert","_takePhoto","launchCameraAsync","allowsEditing","aspect","pickerResult","_handleImagePicked","_pickImage","launchImageLibraryAsync","setState","cancelled","uploadImageAsync","uploadUrl","log","askAsync","CAMERA_ROLL","CAMERA","flex","fontSize","marginBottom","textAlign","marginHorizontal","Component","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","e","TypeError","responseType","open","send","blob","ref","storage","child","v4","put","snapshot","close","getDownloadURL"],"mappings":"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","sourcesContent":["// import { StatusBar } from 'expo-status-bar';\r\n// import React, {useEffect, useState} from 'react';\r\n// import { StyleSheet, Text, View, Platform, Button, Image, TextInput } from 'react-native';\r\n// import Photo from './components/Authentication/imagePicker';\r\n// import Login from './components/Authentication/login';\r\n// import Signup from './components/Authentication/signup';\r\n// import * as ImagePicker from 'expo-image-picker';\r\n// import {launchCamera, launchImageLibrary} from 'react-native-image-picker';\r\n// import Constants from 'expo-constants';\r\n// import axios from 'axios';\r\n// import  AsyncStorage  from '@react-native-community/async-storage';\r\n// import firebase from './components/List items/firbase';\r\n// import { storage } from './components/List items/firbase';\r\n\r\n// export default function App() {\r\n//   // AsyncStorage.removeItem('token')\r\n//   if (!firebase.apps.length) {firebase.initializeApp(firebase.firebaseConfig)}\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text>hello world!</Text>\r\n//       <Photo/>\r\n//       {/* <Login /> */}\r\n//      {/* <Signup/> */}\r\n//       <StatusBar style=\"auto\" />\r\n//     </View>\r\n//   );\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     backgroundColor: '#fff',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n// });\r\n\r\nimport React from 'react';\r\nimport {\r\n  ActivityIndicator,\r\n  Button,\r\n  Clipboard,\r\n  Image,\r\n  Share,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from 'react-native';\r\nimport { Constants, ImagePicker, Permissions } from 'expo';\r\nimport uuid from 'uuid';\r\nimport * as firebase from 'firebase';\r\n\r\nconsole.disableYellowBox = true;\r\n\r\nconst url =\r\n  'https://firebasestorage.googleapis.com/v0/b/blobtest-36ff6.appspot.com/o/Obsidian.jar?alt=media&token=93154b97-8bd9-46e3-a51f-67be47a4628a';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBFmBh5HuVSghFmvRTwaWm9jRztxRf0j68\",\r\n  authDomain: \"aboud-3f2c4.firebaseapp.com\",\r\n  databaseURL: \"https://aboud-3f2c4.firebaseio.com\",\r\n  projectId: \"aboud-3f2c4\",\r\n  storageBucket: \"aboud-3f2c4.appspot.com\",\r\n  messagingSenderId: \"554223798562\",\r\n  appId: \"1:554223798562:web:dac0bc08d01bca91417d7b\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    image: null,\r\n    uploading: false,\r\n  };\r\n  \r\n  async componentDidMount() {\r\n    await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n    await Permissions.askAsync(Permissions.CAMERA);\r\n  }\r\n\r\n  render() {\r\n    let { image } = this.state;\r\n\r\n    return (\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n        {image ? null : (\r\n          <Text\r\n            style={{\r\n              fontSize: 20,\r\n              marginBottom: 20,\r\n              textAlign: 'center',\r\n              marginHorizontal: 15,\r\n            }}>\r\n            Example: Upload ImagePicker result\r\n          </Text>\r\n        )}\r\n\r\n        <Button\r\n          onPress={this._pickImage}\r\n          title=\"Pick an image from camera roll\"\r\n        />\r\n\r\n        <Button onPress={this._takePhoto} title=\"Take a photo\" />\r\n\r\n        {this._maybeRenderImage()}\r\n        {this._maybeRenderUploadingOverlay()}\r\n\r\n        <StatusBar barStyle=\"default\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  _maybeRenderUploadingOverlay = () => {\r\n    if (this.state.uploading) {\r\n      return (\r\n        <View\r\n          style={[\r\n            StyleSheet.absoluteFill,\r\n            {\r\n              backgroundColor: 'rgba(0,0,0,0.4)',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            },\r\n          ]}>\r\n          <ActivityIndicator color=\"#fff\" animating size=\"large\" />\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n\r\n  _maybeRenderImage = () => {\r\n    let { image } = this.state;\r\n    if (!image) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <View\r\n        style={{\r\n          marginTop: 30,\r\n          width: 250,\r\n          borderRadius: 3,\r\n          elevation: 2,\r\n        }}>\r\n        <View\r\n          style={{\r\n            borderTopRightRadius: 3,\r\n            borderTopLeftRadius: 3,\r\n            shadowColor: 'rgba(0,0,0,1)',\r\n            shadowOpacity: 0.2,\r\n            shadowOffset: { width: 4, height: 4 },\r\n            shadowRadius: 5,\r\n            overflow: 'hidden',\r\n          }}>\r\n          <Image source={{ uri: image }} style={{ width: 250, height: 250 }} />\r\n        </View>\r\n\r\n        <Text\r\n          onPress={this._copyToClipboard}\r\n          onLongPress={this._share}\r\n          style={{ paddingVertical: 10, paddingHorizontal: 10 }}>\r\n          {image}\r\n        </Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  _share = () => {\r\n    Share.share({\r\n      message: this.state.image,\r\n      title: 'Check out this photo',\r\n      url: this.state.image,\r\n    });\r\n  };\r\n\r\n  _copyToClipboard = () => {\r\n    Clipboard.setString(this.state.image);\r\n    alert('Copied image URL to clipboard');\r\n  };\r\n\r\n  _takePhoto = async () => {\r\n    let pickerResult = await ImagePicker.launchCameraAsync({\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n    });\r\n\r\n    this._handleImagePicked(pickerResult);\r\n  };\r\n\r\n  _pickImage = async () => {\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n    });\r\n\r\n    this._handleImagePicked(pickerResult);\r\n  };\r\n\r\n  _handleImagePicked = async pickerResult => {\r\n    try {\r\n      this.setState({ uploading: true });\r\n\r\n      if (!pickerResult.cancelled) {\r\n        uploadUrl = await uploadImageAsync(pickerResult.uri);\r\n        this.setState({ image: uploadUrl });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      alert('Upload failed, sorry :(');\r\n    } finally {\r\n      this.setState({ uploading: false });\r\n    }\r\n  };\r\n}\r\n\r\nasync function uploadImageAsync(uri) {\r\n  // Why are we using XMLHttpRequest? See:\r\n  // https://github.com/expo/expo/issues/2402#issuecomment-443726662\r\n  const blob = await new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.onload = function() {\r\n      resolve(xhr.response);\r\n    };\r\n    xhr.onerror = function(e) {\r\n      console.log(e);\r\n      reject(new TypeError('Network request failed'));\r\n    };\r\n    xhr.responseType = 'blob';\r\n    xhr.open('GET', uri, true);\r\n    xhr.send(null);\r\n  });\r\n\r\n  const ref = firebase\r\n    .storage()\r\n    .ref()\r\n    .child(uuid.v4());\r\n  const snapshot = await ref.put(blob);\r\n\r\n  // We're done with the blob, close and release it\r\n  blob.close();\r\n\r\n  return await snapshot.ref.getDownloadURL();\r\n}"]},"metadata":{},"sourceType":"module"}