{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\aqrab\\\\OneDrive\\\\Desktop\\\\thesis project phase 2\\\\front-end-react-native-mobilapp\\\\components\\\\List items\\\\addItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { storage } from \"./firbase\";\nimport axios from 'axios';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\n\nvar AddItem = function AddItem(props) {\n  var _useState = useState({\n    category: '',\n    quantity: '',\n    weight: '',\n    description: '',\n    price: '',\n    image: null,\n    location: localStorage.getItem('location'),\n    status: \"Pending\",\n    user_id: localStorage.getItem('user_id')\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderData = _useState2[0],\n      setOrderData = _useState2[1];\n\n  console.log(orderData);\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setUserImage = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var imageUpload = function imageUpload(e) {\n    var imageLink;\n    return _regeneratorRuntime.async(function imageUpload$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            imageLink = storage.ref(\"images/\" + image.name).put(image);\n            console.log(imageLink);\n            imageLink.on(\"state_changed\", function (snapshot) {}, function (error) {\n              console.log(error);\n            }, function () {\n              storage.ref().child(\"images/\" + image.name).getDownloadURL().then(function (url) {\n                setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n                  image: url\n                }));\n                console.log(url);\n              });\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addItems = function addItems() {\n    axios.post(\"http://192.168.1.36:5000/items\", orderData).then(function (res) {}).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"category:\"), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here your category!\",\n    onChangeText: function onChangeText(text) {\n      return setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n        category: text\n      }));\n    },\n    defaultValue: orderData.category,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 14\n    }\n  }, \"quantity:\"), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here the quantity!\",\n    onChangeText: function onChangeText(text) {\n      return setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n        quantity: text\n      }));\n    },\n    defaultValue: orderData.quantity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 14\n    }\n  }, \"weight:\"), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here the weight!\",\n    onChangeText: function onChangeText(text) {\n      return setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n        weight: text\n      }));\n    },\n    defaultValue: orderData.weight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 14\n    }\n  }, \"description:\"), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here the description!\",\n    onChangeText: function onChangeText(text) {\n      return setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n        description: text\n      }));\n    },\n    defaultValue: orderData.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 14\n    }\n  }, \"price:\"), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here the price!\",\n    onChangeText: function onChangeText(text) {\n      return setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n        price: text\n      }));\n    },\n    defaultValue: orderData.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"image:\"), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: pickImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    onPress: imageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"upload Image\")), React.createElement(Button, {\n    title: \"add items\",\n    onPress: addItems,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default AddItem;","map":{"version":3,"sources":["C:/Users/aqrab/OneDrive/Desktop/thesis project phase 2/front-end-react-native-mobilapp/components/List items/addItem.js"],"names":["React","useState","useEffect","storage","axios","ImagePicker","Constants","AddItem","props","category","quantity","weight","description","price","image","location","localStorage","getItem","status","user_id","orderData","setOrderData","console","log","setUserImage","Platform","OS","requestMediaLibraryPermissionsAsync","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","setImage","uri","imageUpload","e","imageLink","ref","name","put","on","snapshot","error","child","getDownloadURL","then","url","addItems","post","res","catch","height","text","flex","alignItems","justifyContent","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { storage } from './firbase'\r\n\r\nimport axios from 'axios';\r\nimport { Text,Button, Image, View, Platform,TextInput } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Constants from 'expo-constants';\r\n\r\nconst AddItem = (props) => {\r\n    const [orderData, setOrderData] = useState({  category: '', quantity: '', weight: '', description: '', price:''\r\n    ,image:null, location:localStorage.getItem('location'),\r\n    status:\"Pending\", user_id:localStorage.getItem('user_id')})\r\n   console.log(orderData)\r\n\r\n\r\n   const [image, setUserImage] = useState(null)\r\n   \r\n   useEffect(() => {\r\n     (async () => {\r\n       if (Platform.OS !== 'web') {\r\n         const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n         if (status !== 'granted') {\r\n           alert('Sorry, we need camera roll permissions to make this work!');\r\n         }\r\n       }\r\n     })();\r\n   }, []);\r\n   const pickImage = async () => {\r\n     let result = await ImagePicker.launchImageLibraryAsync({\r\n       mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n       allowsEditing: true,\r\n       aspect: [4, 3],\r\n       quality: 1,\r\n     });\r\n     console.log(result);\r\n     if (!result.cancelled) {\r\n      setImage(result.uri);\r\n   \r\n     }\r\n   };\r\n\r\n\r\n  \r\n   const imageUpload  = async (e) => {\r\n    const imageLink = storage.ref(`images/${image.name}`).put(image)\r\n    console.log(imageLink)\r\n    imageLink.on(\r\n       \"state_changed\",\r\n       snapshot => {},\r\n       error => {\r\n         console.log(error)\r\n       },\r\n       () => {\r\n         storage.ref().child(`images/${image.name}`).getDownloadURL().then(url => {\r\n          setOrderData({...orderData ,image:url})\r\n           console.log(url)\r\n         })\r\n       })\r\n  }\r\n    \r\n\r\nconst addItems = () =>{\r\n    axios.post(\"http://192.168.1.36:5000/items\",orderData).then( res => {\r\n       \r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n   \r\n}\r\n\r\n\r\n    return (\r\n        <View >\r\n            <View>\r\n            <Text>category:</Text>\r\n            <TextInput\r\n            style={{height: 40}}\r\n            placeholder=\"Type here your category!\"\r\n            onChangeText={text => setOrderData({...orderData ,category:text})}\r\n            defaultValue={orderData.category}\r\n             />\r\n             <Text>quantity:</Text>\r\n            <TextInput\r\n            style={{height: 40}}\r\n            placeholder=\"Type here the quantity!\"\r\n            onChangeText={text => setOrderData({...orderData ,quantity:text})}\r\n            defaultValue={orderData.quantity}\r\n             />\r\n             <Text>weight:</Text>\r\n            <TextInput\r\n            style={{height: 40}}\r\n            placeholder=\"Type here the weight!\"\r\n            onChangeText={text => setOrderData({...orderData ,weight:text})}\r\n            defaultValue={orderData.weight}\r\n             />\r\n             <Text>description:</Text>\r\n            <TextInput\r\n            style={{height: 40}}\r\n            placeholder=\"Type here the description!\"\r\n            onChangeText={text => setOrderData({...orderData ,description:text})}\r\n            defaultValue={orderData.description}\r\n             />\r\n             <Text>price:</Text>\r\n            <TextInput\r\n            style={{height: 40}}\r\n            placeholder=\"Type here the price!\"\r\n            onChangeText={text => setOrderData({...orderData ,price:text})}\r\n            defaultValue={orderData.price}\r\n             />\r\n              <Text>image:</Text>\r\n              <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n      {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\r\n      <Button  onPress= {imageUpload} >upload Image</Button>\r\n    </View>\r\n          \r\n            <Button\r\n        title=\"add items\"\r\n        onPress={addItems}\r\n      />\r\n            </View>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AddItem;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}