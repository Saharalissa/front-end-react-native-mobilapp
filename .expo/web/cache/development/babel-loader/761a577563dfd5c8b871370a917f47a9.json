{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\aqrab\\\\OneDrive\\\\Desktop\\\\thesis project phase 2\\\\front-end-react-native-mobilapp\\\\components\\\\List items\\\\edit.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { storage } from \"./firbase\";\nimport ImagePicker from 'react-native-image-picker';\nimport axios from 'axios';\nexport var TodoItem = function TodoItem(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isEditing = _useState4[0],\n      setEdit = _useState4[1];\n\n  var handleEdit = function handleEdit() {\n    props.editHandler(props.todoKey, text);\n    setText(\"\");\n    setEdit(false);\n  };\n\n  return React.createElement(View, {\n    style: styles.items,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.itemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, isEditing ? React.createElement(TextInput, {\n    value: text,\n    onChangeText: setText,\n    style: styles.itemText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }) : React.createElement(Text, {\n    style: styles.itemText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, props.title), React.createElement(View, {\n    style: styles.btnContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Buttons, {\n    title: \"Delete\",\n    onPress: function onPress() {\n      return props.pressHandler(props.todoKey);\n    },\n    style: styles.itemBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), isEditing ? React.createElement(Buttons, {\n    title: \"Save\",\n    onPress: handleEdit,\n    style: styles.editBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }) : React.createElement(Buttons, {\n    title: \"Edit\",\n    onPress: function onPress() {\n      return setEdit(true);\n    },\n    style: styles.editBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }))));\n};","map":{"version":3,"sources":["C:/Users/aqrab/OneDrive/Desktop/thesis project phase 2/front-end-react-native-mobilapp/components/List items/edit.js"],"names":["React","useState","storage","ImagePicker","axios","TodoItem","props","text","setText","isEditing","setEdit","handleEdit","editHandler","todoKey","styles","items","itemContainer","itemText","title","btnContainer","pressHandler","itemBtn","editBtn"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,OAAT;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,kBACPL,QAAQ,CAAC,EAAD,CADD;AAAA;AAAA,MACxBM,IADwB;AAAA,MAClBC,OADkB;;AAAA,mBAEFP,QAAQ,CAAC,KAAD,CAFN;AAAA;AAAA,MAExBQ,SAFwB;AAAA,MAEbC,OAFa;;AAIjC,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBL,IAAAA,KAAK,CAACM,WAAN,CAAkBN,KAAK,CAACO,OAAxB,EAAiCN,IAAjC;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAJH;;AAME,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,SAAS,GACN,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,IAAlB;AAAwB,IAAA,YAAY,EAAEC,OAAtC;AAA+C,IAAA,KAAK,EAAEM,MAAM,CAACG,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEN,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BX,KAAK,CAACY,KAArC,CAHN,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAE;AAAA,aAAMb,KAAK,CAACc,YAAN,CAAmBd,KAAK,CAACO,OAAzB,CAAN;AAAA,KAAjC;AAA0E,IAAA,KAAK,EAAEC,MAAM,CAACO,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGZ,SAAS,GACN,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAEE,UAA/B;AAA2C,IAAA,KAAK,EAAEG,MAAM,CAACQ,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEN,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAE;AAAA,aAAMZ,OAAO,CAAC,IAAD,CAAb;AAAA,KAA/B;AAAoD,IAAA,KAAK,EAAEI,MAAM,CAACQ,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJN,CALF,CADF,CADF;AAiBO,CA3BF","sourcesContent":["import React, { useState } from 'react';\r\nimport {View, Text, ImageBackground,TextInput,Button} from 'react-native';\r\nimport { storage } from './firbase'\r\nimport ImagePicker from 'react-native-image-picker'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport const TodoItem = props => {\r\n  const [text, setText] = useState(\"\");\r\n  const [isEditing, setEdit] = useState(false);\r\n\r\nconst handleEdit = () => {\r\n    props.editHandler(props.todoKey, text);\r\n    setText(\"\");\r\n    setEdit(false);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.items}>\r\n      <View style={styles.itemContainer}>\r\n        {isEditing \r\n          ? <TextInput value={text} onChangeText={setText} style={styles.itemText} />\r\n          : <Text style={styles.itemText}>{props.title}</Text>\r\n        }\r\n        <View style={styles.btnContainer}>\r\n          <Buttons title=\"Delete\" onPress={() => props.pressHandler(props.todoKey)} style={styles.itemBtn} />\r\n          {isEditing \r\n            ? <Buttons title=\"Save\" onPress={handleEdit} style={styles.editBtn} />\r\n            : <Buttons title=\"Edit\" onPress={() => setEdit(true)} style={styles.editBtn} />\r\n          }\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}