{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Mobileside\\\\front-end-react-native-mobilapp\\\\components\\\\List items\\\\addItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { storage } from \"../../Fire\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport axios from \"axios\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\nvar CalPrice = 0;\n\nvar AddItem = function AddItem(props) {\n  var _useState = useState({\n    category: \"\",\n    quantity: \"\",\n    weight: \"\",\n    description: \"\",\n    price: \"\",\n    image: null,\n    location: localStorage.getItem(\"location\"),\n    status: \"Pending\",\n    user_id: localStorage.getItem(\"user_id\")\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderData = _useState2[0],\n      setOrderData = _useState2[1];\n\n  console.log(orderData);\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  useEffect(function _callee() {\n    var value, id;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user_id\"));\n\n          case 3:\n            value = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"location\"));\n\n          case 6:\n            id = _context.sent;\n            setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n              location: id,\n              user_id: value\n            }));\n\n            if (value !== null) {}\n\n            _context.next = 13;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  }, []);\n\n  var onChooseImagePress = function onChooseImagePress() {\n    var result, json;\n    return _regeneratorRuntime.async(function onChooseImagePress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              console.log(result);\n              json = JSON.stringify(result.height);\n              setImage(result.uri);\n              uploadImage(result.uri, json).then(function () {\n                console.log(\"success\");\n              }).catch(function (error) {\n                console.log(error);\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage(uri, imageName) {\n    var response, blob, ref, saved;\n    return _regeneratorRuntime.async(function uploadImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context3.sent;\n            ref = storage.ref().child(\"images/\" + imageName).put(blob);\n            saved = storage.ref(\"images\").child(imageName).getDownloadURL().then(function (url) {\n              orderData.image = url;\n            });\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addItems = function addItems() {\n    axios.post(\"http://192.168.1.36:5000/items\", orderData).then(function (res) {}).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var prices = {\n    Iron: 0.25,\n    wood: 0.2,\n    glass: 0.15,\n    plastic: 0.1\n  };\n  var kind = orderData.category;\n  var calculatePrice = prices[kind];\n  CalPrice = calculatePrice * orderData.quantity * orderData.weight;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: onChooseImagePress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(RNPickerSelect, {\n    onValueChange: function onValueChange(value) {\n      return setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n        category: value\n      }));\n    },\n    items: [{\n      label: \"Iron\",\n      value: \"Iron\"\n    }, {\n      label: \"wood\",\n      value: \"wood\"\n    }, {\n      label: \"glass\",\n      value: \"glass\"\n    }, {\n      label: \"plastic\",\n      value: \"plastic\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"quantity:\"), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here the quantity!\",\n    onChangeText: function onChangeText(text) {\n      return setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n        quantity: text,\n        price: CalPrice\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"weight:\"), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here the weight!\",\n    onChangeText: function onChangeText(text) {\n      return setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n        weight: text,\n        price: CalPrice\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"description:\"), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here the description!\",\n    onChangeText: function onChangeText(text) {\n      return setOrderData(_objectSpread(_objectSpread({}, orderData), {}, {\n        description: text\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"price:\"), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: CalPrice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"add location\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"MapScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"add items\",\n    onPress: addItems,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default AddItem;","map":{"version":3,"sources":["C:/Users/HP/Desktop/Mobileside/front-end-react-native-mobilapp/components/List items/addItem.js"],"names":["React","useState","useEffect","storage","RNPickerSelect","axios","ImagePicker","Constants","CalPrice","AddItem","props","category","quantity","weight","description","price","image","location","localStorage","getItem","status","user_id","orderData","setOrderData","console","log","setImage","AsyncStorage","value","id","onChooseImagePress","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","json","JSON","stringify","height","uri","uploadImage","then","catch","error","imageName","fetch","response","blob","ref","child","put","saved","getDownloadURL","url","addItems","post","res","prices","Iron","wood","glass","plastic","kind","calculatePrice","flex","alignItems","justifyContent","width","label","text","navigation","navigate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { storage } from \"../../Fire\";\r\nimport RNPickerSelect from \"react-native-picker-select\";\r\nimport axios from \"axios\";\r\nimport { Text, Button, Image, View, Platform, TextInput } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n// import * as  ImagePicker from 'react-native-image-picker'\r\nimport Constants from \"expo-constants\";\r\nvar CalPrice = 0;\r\nconst AddItem = (props) => {\r\n  const [orderData, setOrderData] = useState({\r\n    category: \"\",\r\n    quantity: \"\",\r\n    weight: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    image: null,\r\n    location: localStorage.getItem(\"location\"),\r\n    status: \"Pending\",\r\n    user_id: localStorage.getItem(\"user_id\"),\r\n  });\r\n  console.log(orderData);\r\n  //declaring an image const\r\n  const [image, setImage] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const value = await AsyncStorage.getItem(\"user_id\");\r\n      const id = await AsyncStorage.getItem(\"location\");\r\n      setOrderData({ ...orderData,  location:id, user_id:value})\r\n     \r\n      if (value !== null) {\r\n        // We have data!!\r\n      }\r\n    } catch (error) {\r\n      // Error retrieving data\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  // choosing the image\r\n  const onChooseImagePress = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n    //checking the uploaded image\r\n    if (!result.cancelled) {\r\n      console.log(result);\r\n      //setting the image name\r\n      var json = JSON.stringify(result.height);\r\n      setImage(result.uri);\r\n      //calling the image function\r\n      uploadImage(result.uri, json)\r\n        .then(() => {\r\n          console.log(\"success\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  //image save in firebase\r\n  const uploadImage = async (uri, imageName) => {\r\n    const response = await fetch(uri);\r\n    const blob = await response.blob();\r\n    const ref = storage\r\n      .ref()\r\n      .child(\"images/\" + imageName)\r\n      .put(blob);\r\n    //retreive the image from the firebase\r\n    const saved = storage\r\n      .ref(\"images\")\r\n      .child(imageName)\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        orderData.image = url;\r\n      });\r\n  };\r\n  const addItems = () => {\r\n    axios\r\n      .post(\"http://192.168.1.36:5000/items\", orderData)\r\n      .then((res) => {})\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    //  props.navigation.navigate(\"All Items\")\r\n  };\r\n  const prices = { Iron: 0.25, wood: 0.2, glass: 0.15, plastic: 0.1 };\r\n  var kind = orderData.category;\r\n  const calculatePrice = prices[kind];\r\n  CalPrice = calculatePrice * orderData.quantity * orderData.weight;\r\n  return (\r\n    <View>\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        {image && (\r\n          <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n        )}\r\n        <Button\r\n          title=\"Pick an image from camera roll\"\r\n          onPress={onChooseImagePress}\r\n        />\r\n      </View>\r\n      <View>\r\n        <RNPickerSelect\r\n          onValueChange={(value) =>\r\n            setOrderData({ ...orderData, category: value })\r\n          }\r\n          items={[\r\n            { label: \"Iron\", value: \"Iron\" },\r\n            { label: \"wood\", value: \"wood\" },\r\n            { label: \"glass\", value: \"glass\" },\r\n            { label: \"plastic\", value: \"plastic\" },\r\n          ]}\r\n        />\r\n        <Text>quantity:</Text>\r\n        <TextInput\r\n          style={{ height: 40 }}\r\n          placeholder=\"Type here the quantity!\"\r\n          onChangeText={(text) =>\r\n            setOrderData({ ...orderData, quantity: text, price: CalPrice })\r\n          }\r\n        />\r\n        <Text>weight:</Text>\r\n        <TextInput\r\n          style={{ height: 40 }}\r\n          placeholder=\"Type here the weight!\"\r\n          onChangeText={(text) =>\r\n            setOrderData({ ...orderData, weight: text, price: CalPrice })\r\n          }\r\n        />\r\n        <Text>description:</Text>\r\n        <TextInput\r\n          style={{ height: 40 }}\r\n          placeholder=\"Type here the description!\"\r\n          onChangeText={(text) =>\r\n            setOrderData({ ...orderData, description: text })\r\n          }\r\n        />\r\n        <Text>price:</Text>\r\n        <TextInput style={{ height: 40 }} placeholder={CalPrice} />\r\n        <Button\r\n          title=\"add location\"\r\n          onPress={() => props.navigation.navigate(\"MapScreen\")}\r\n        />\r\n        <Button title=\"add items\" onPress={addItems} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\nexport default AddItem;"]},"metadata":{},"sourceType":"module"}